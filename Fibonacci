public class FibonacciNumbers {
    //Use of recursion, good idea but slow
    //By drawing the Tree it becomes apparent that the computation is very
    //repetitive T(n)>F(n)
    private static int fib(int n){
        if (n <=1)
            return n;
            else
                return fib(n-1)+fib(n-2);
    }


    private static int fibFast(int m) {

        int fibFast[] = new int[m + 2];
        int i;

        fibFast[0] = 0;
        fibFast[1] = 1;

        for (i = 2; i <= m; i++) {

            fibFast[i] = fibFast[i - 1] + fibFast[i - 2];
        }

        return fibFast[m];
    }
    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        System.out.println(fib(n));

        int m = scanner.nextInt();
        System.out.println(fibFast(n));

    }
}

